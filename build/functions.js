(()=>{"use strict";let t=new Map,e=!1;async function o(){e=!1;const o=new Map(t);t.clear();const r=Array.from(o.entries()).sort(((t,e)=>t[0].getTime()-e[0].getTime())),n=new Map;let a=null,s=[];for(let t=0;t<r.length;t++){const[e,o]=r[t];null==a&&(a=e);for(const t of o)s.push(t);if(e.getTime()-a.getTime()>31536e6||t==r.length-1){const t=`http://localhost:38820/https://api.aeso.ca/report/v1.1/price/poolPrice?startDate=${a.getUTCFullYear().toFixed()}-${(a.getUTCMonth()+1).toFixed().padStart(2,"0")}-${(a.getUTCDate()+1).toFixed().padStart(2,"0")}&endDate=${e.getUTCFullYear().toFixed()}-${(e.getUTCMonth()+1).toFixed().padStart(2,"0")}-${(e.getUTCDate()+1).toFixed().padStart(2,"0")}`;n.set(t,s),a=null,s=[]}}const c=[];for(const[t,e]of n)c.push(new Promise((async(o,r)=>{try{const o=await fetch(t,{headers:{"X-API-Key":localStorage.getItem("aeso-api-key")??""}}),r=await o.json();for(const t of e)t.resolve&&t.resolve(r)}catch(t){for(const o of e)o.reject&&o.reject(t)}o()})));await Promise.allSettled(c)}CustomFunctions.associate("AESOPOOLPRICE",(async function(r,n){let a=function(t){switch(typeof t){case"string":{const e=new Date(t);if(isNaN(e.getTime()))throw new Error(`Invalid date "${t}".`);return new Date(t)}case"number":return(e=t)<61||(e-=1),new Date(24*(e-25568)*3600*1e3)}var e}(r);const s=await function(r){const n={resolve:null,reject:null},a=new Promise(((t,e)=>{n.resolve=t,n.reject=e})),s=t.get(r);return s?s.push(n):t.set(r,[n]),e||(e=!0,setTimeout(o,100)),a}(a);console.log(s);const c=`${a.getUTCFullYear()}-${(a.getUTCMonth()+1).toString().padStart(2,"0")}-${(a.getUTCDate()+1).toString().padStart(2,"0")} ${(n-1).toString().padStart(2,"0")}:00`;console.log("Search begin_datetime_mpt",c),console.log(s.return["Pool Price Report"]);for(const t of s.return["Pool Price Report"])if(console.log("Compate",t.begin_datetime_mpt,c),t.begin_datetime_mpt==c)return console.log(typeof t.pool_price,t.pool_price),console.log(parseFloat(t.pool_price)),parseFloat(t.pool_price);throw new Error("Not found.")})),CustomFunctions.associate("CREATEFORMATTEDNUMBER",(function(t,e){return{type:"FormattedNumber",basicValue:t,numberFormat:e}})),CustomFunctions.associate("LOGINPUT",(function(t){console.log(typeof t+":",t)}))})();