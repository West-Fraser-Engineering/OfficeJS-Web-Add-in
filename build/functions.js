(()=>{"use strict";const t=new Map;let e=[],o=!1;function a(t,a){const s=new Promise(((o,r)=>{e.push({asset_id:t,dateTime:a,resolve:o,reject:r})}));return o||(o=!0,setTimeout(r,100)),s}async function r(){const a=864e5,r=localStorage.getItem("aeso-api-key")??"",s=e;e=[],o=!1;const n=new Map;for(const t of s){let e=n.get(t.asset_id);null==e&&(e=new Map,n.set(t.asset_id,e));let o=e.get(t.dateTime.getTime());null==o&&(o=[],e.set(t.dateTime.getTime(),o)),o.push({resolve:t.resolve,reject:t.reject})}const l=[],i=[];for(const[e,o]of n.entries()){const s=Array.from(o.entries()).sort(((t,e)=>t[0]-e[0]));let n=null,c=null,u=[];for(let o=0;o<s.length;o++){const d=s[o][0];if(u=u.concat(s[o][1]),null==n&&(n=d),null==c&&(c=d),24*(Math.floor((d-n)/a)+1)>8e4||Math.floor((d-c)/a)>5||o==s.length-1){const o=new Date(n),a=new Date(d),s=o.getUTCFullYear().toFixed(),f=(o.getUTCMonth()+1).toFixed().padStart(2,"0"),p=o.getUTCDate().toFixed().padStart(2,"0"),g=a.getUTCFullYear().toFixed(),m=(a.getUTCMonth()+1).toFixed().padStart(2,"0"),h=a.getUTCDate().toFixed().padStart(2,"0");let T;T=s==g&&f==m&&p==h?`http://localhost:38820/https://api.aeso.ca/report/v1/meteredvolume/details?startDate=${s}-${f}-${p}&asset_ID=${e}`:`http://localhost:38820/https://api.aeso.ca/report/v1/meteredvolume/details?startDate=${s}-${f}-${p}&endDate=${g}-${m}-${h}&asset_ID=${e}`;const w=u;u=[],i.push(new Promise((async(e,o)=>{try{console.log("Request to",T);const o=await fetch(T,{headers:{"X-API-Key":r}}),a=await o.json();for(const e of a.return)for(const o of e.asset_list){let e=t.get(o.asset_ID);null==e&&(e=new Map,t.set(o.asset_ID,e));for(const t of o.metered_volume_list)e.set(t.begin_date_mpt,parseFloat(t.metered_volume))}for(const t of w)t.resolve();e()}catch(t){for(const e of w)e.reject(t);o(t)}}))),l.push(T),n=null,c=null}c=d}}await Promise.allSettled(i)}let s=new Map,n=!1;async function l(){n=!1;const t=new Map(s);s.clear();const e=Array.from(t.entries()).sort(((t,e)=>t[0].getTime()-e[0].getTime())),o=new Map;let a=null,r=[];for(let t=0;t<e.length;t++){const[s,n]=e[t];null==a&&(a=s);for(const t of n)r.push(t);if(s.getTime()-a.getTime()>31536e6||t==e.length-1){const t=`http://localhost:38820/https://api.aeso.ca/report/v1.1/price/poolPrice?startDate=${a.getUTCFullYear().toFixed()}-${(a.getUTCMonth()+1).toFixed().padStart(2,"0")}-${a.getUTCDate().toFixed().padStart(2,"0")}&endDate=${s.getUTCFullYear().toFixed()}-${(s.getUTCMonth()+1).toFixed().padStart(2,"0")}-${s.getUTCDate().toFixed().padStart(2,"0")}`;o.set(t,r),a=null,r=[]}}const l=[];for(const[t,e]of o)l.push(new Promise((async(o,a)=>{try{console.log("Web request to ",t);const o=await fetch(t,{headers:{"X-API-Key":localStorage.getItem("aeso-api-key")??""}}),a=await o.json();for(const t of e)t.resolve&&t.resolve(a)}catch(t){for(const o of e)o.reject&&o.reject(t)}o()})));await Promise.allSettled(l)}function i(t){switch(typeof t){case"string":{const e=new Date(t);if(isNaN(e.getTime()))throw new Error(`Invalid date "${t}".`);return new Date(t)}case"number":return(e=t)<61||(e-=1),new Date(24*(e-25568)*3600*1e3)}var e}CustomFunctions.associate("AESOPOOLPRICE",(async function(t,e){let o=i(t);const a=await function(t){const e={resolve:null,reject:null},o=new Promise(((t,o)=>{e.resolve=t,e.reject=o})),a=s.get(t);return a?a.push(e):s.set(t,[e]),n||(n=!0,setTimeout(l,100)),o}(o),r=`${o.getUTCFullYear()}-${(o.getUTCMonth()+1).toString().padStart(2,"0")}-${o.getUTCDate().toString().padStart(2,"0")} ${(e-1).toString().padStart(2,"0")}:00`;for(const t of a.return["Pool Price Report"])if(t.begin_datetime_mpt==r)return parseFloat(t.pool_price);throw new Error("Not found.")})),CustomFunctions.associate("AESOMETEREDVOLUME",(async function(e,o,r){let s=i(o);return await async function(e,o){const r=`${o.getUTCFullYear().toFixed()}-${(o.getUTCMonth()+1).toFixed().padStart(2,"0")}-${o.getUTCDate().toFixed().padStart(2,"0")} ${o.getUTCHours().toFixed().padStart(2,"0")}:00`;for(let s=0;s<2;s++){const n=t.get(e),l=n?.get(r);if(null!=l)return l;if(0!=s)throw new Error(`Could not get metered volume at ${r} for asset ${e}.`);await a(e,o)}throw new Error(`Could not get metered volume at ${r} for asset ${e}.`)}(e,new Date(s.getTime()+36e5*(r-1)))})),CustomFunctions.associate("CREATEFORMATTEDNUMBER",(function(t,e){return{type:"FormattedNumber",basicValue:t,numberFormat:e}})),CustomFunctions.associate("LOGINPUT",(function(t){console.log(typeof t+":",t)}))})();